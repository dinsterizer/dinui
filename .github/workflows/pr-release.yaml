name: pr-release

on:
  pull_request:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v3

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Find pr-release comment
        uses: peter-evans/find-comment@v3
        id: pr-fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!--pr-release-->'

      - name: Create or update pr-release comment with in process status
        uses: peter-evans/create-or-update-comment@v4
        id: pr-couc
        with:
          comment-id: ${{ steps.pr-fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!--pr-release-->
            ## PR-release for testing

            Latest commit: `${{ steps.short-sha.outputs.sha }}`
            Status: üë∑ In process...

            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }})
          edit-mode: replace

      - uses: pnpm/action-setup@v2

      - name: Publish packages
        id: publish
        continue-on-error: true
        run: |
          pnpm i
          pnpm changeset version --snapshot dev-pr-${{ github.event.pull_request.number }}
          pnpm build:packages
          pnpm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          pnpm changeset publish --tag dev-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update pr-release comment with failed status
        if: steps.publish.outcome != 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.pr-couc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!--pr-release-->
            ## PR-release for testing

            Latest commit: `${{ steps.short-sha.outputs.sha }}`
            Status: ‚ùå Failed

            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }})
          edit-mode: replace

      - name: Get @dinui/react version
        if: steps.publish.outcome == 'success'
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        id: dinui-react-version
        with:
          path: packages/react-ui

      - name: Update pr-release comment with published status
        if: steps.publish.outcome == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.pr-couc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!--pr-release-->
            ## PR-release for testing

            Latest commit: `${{ steps.short-sha.outputs.sha }}`
            Status: ‚úÖ Published

            ```bash
            npm install @dinui/react@${{ steps.dinui-react-version.outputs.current-version}}
            ```

            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }})
          edit-mode: replace

      - name: Exit with failed status
        if: steps.publish.outcome != 'success'
        run: exit 1
